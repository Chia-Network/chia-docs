"use strict";(self.webpackChunkchia_docs=self.webpackChunkchia_docs||[]).push([[754],{1470:(e,t,a)=>{a.d(t,{A:()=>j});var n=a(6540),r=a(4164),o=a(7559),s=a(3104),i=a(6347),l=a(205),c=a(7485),u=a(1682),h=a(679);function d(e){return n.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function p(e){const{values:t,children:a}=e;return(0,n.useMemo)(()=>{const e=t??function(e){return d(e).map(({props:{value:e,label:t,attributes:a,default:n}})=>({value:e,label:t,attributes:a,default:n}))}(a);return function(e){const t=(0,u.XI)(e,(e,t)=>e.value===t.value);if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[t,a])}function y({value:e,tabValues:t}){return t.some(t=>t.value===e)}function m({queryString:e=!1,groupId:t}){const a=(0,i.W6)(),r=function({queryString:e=!1,groupId:t}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:e,groupId:t});return[(0,c.aZ)(r),(0,n.useCallback)(e=>{if(!r)return;const t=new URLSearchParams(a.location.search);t.set(r,e),a.replace({...a.location,search:t.toString()})},[r,a])]}function f(e){const{defaultValue:t,queryString:a=!1,groupId:r}=e,o=p(e),[s,i]=(0,n.useState)(()=>function({defaultValue:e,tabValues:t}){if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!y({value:e,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${t.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const a=t.find(e=>e.default)??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:o})),[c,u]=m({queryString:a,groupId:r}),[d,f]=function({groupId:e}){const t=function(e){return e?`docusaurus.tab.${e}`:null}(e),[a,r]=(0,h.Dv)(t);return[a,(0,n.useCallback)(e=>{t&&r.set(e)},[t,r])]}({groupId:r}),v=(()=>{const e=c??d;return y({value:e,tabValues:o})?e:null})();(0,l.A)(()=>{v&&i(v)},[v]);return{selectedValue:s,selectValue:(0,n.useCallback)(e=>{if(!y({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),f(e)},[u,f,o]),tabValues:o}}var v=a(2303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var w=a(4848);function g({className:e,block:t,selectedValue:a,selectValue:n,tabValues:o}){const i=[],{blockElementScrollPositionUntilNextRender:l}=(0,s.a_)(),c=e=>{const t=e.currentTarget,r=i.indexOf(t),s=o[r].value;s!==a&&(l(t),n(s))},u=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const a=i.indexOf(e.currentTarget)+1;t=i[a]??i[0];break}case"ArrowLeft":{const a=i.indexOf(e.currentTarget)-1;t=i[a]??i[i.length-1];break}}t?.focus()};return(0,w.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":t},e),children:o.map(({value:e,label:t,attributes:n})=>(0,w.jsx)("li",{role:"tab",tabIndex:a===e?0:-1,"aria-selected":a===e,ref:e=>{i.push(e)},onKeyDown:u,onClick:c,...n,className:(0,r.A)("tabs__item",b.tabItem,n?.className,{"tabs__item--active":a===e}),children:t??e},e))})}function k({lazy:e,children:t,selectedValue:a}){const o=(Array.isArray(t)?t:[t]).filter(Boolean);if(e){const e=o.find(e=>e.props.value===a);return e?(0,n.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,w.jsx)("div",{className:"margin-top--md",children:o.map((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==a}))})}function x(e){const t=f(e);return(0,w.jsxs)("div",{className:(0,r.A)(o.G.tabs.container,"tabs-container",b.tabList),children:[(0,w.jsx)(g,{...t,...e}),(0,w.jsx)(k,{...t,...e})]})}function j(e){const t=(0,v.A)();return(0,w.jsx)(x,{...e,children:d(e.children)},String(t))}},8237:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"cloud-wallet/tooltips","title":"Tooltips","description":"This page contains tooltip links from the Cloud Wallet. It provides some basic info about the various components.","source":"@site/docs/cloud-wallet/tooltips.md","sourceDirName":"cloud-wallet","slug":"/cloud-wallet/tooltips","permalink":"/cloud-wallet/tooltips","draft":false,"unlisted":false,"editUrl":"https://github.com/Chia-Network/chia-docs/blob/main/docs/cloud-wallet/tooltips.md","tags":[],"version":"current","frontMatter":{"title":"Tooltips","slug":"/cloud-wallet/tooltips"},"sidebar":"tutorialSidebar","previous":{"title":"Known Issues","permalink":"/cloud-wallet/known-issues"},"next":{"title":"Getting Started","permalink":"/chia-signer/getting-started"}}');var r=a(4848),o=a(8453);a(1470),a(9365);const s={title:"Tooltips",slug:"/cloud-wallet/tooltips"},i=void 0,l={},c=[{value:"Recovery",id:"recovery",level:2},{value:"Spend Key",id:"spend-key",level:2},{value:"Recovery Key",id:"recovery-key",level:2},{value:"Transaction Fee",id:"transaction-fee",level:2},{value:"Recovery Clawback",id:"recovery-clawback",level:2},{value:"Recovery Phrase",id:"recovery-phrase",level:2},{value:"Recovery Timer",id:"recovery-timer",level:2},{value:"Signer App",id:"signer-app",level:2},{value:"Clawback",id:"clawback",level:2}];function u(e){const t={h2:"h2",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:"This page contains tooltip links from the Cloud Wallet. It provides some basic info about the various components."}),"\n",(0,r.jsx)(t.h2,{id:"recovery",children:"Recovery"}),"\n",(0,r.jsx)(t.p,{children:"This is the process of rekeying a vault. If your spend key is lost or stolen, you can swap it out for a new one. For example, if someone steals your smartphone where your Chia Signer app is installed, you can obtain a new phone, install the Chia Signer app, and create a new hardware key. You can then instruct your vault to replace the stolen key with the new one. The recovery process also allows you to change your recovery key if desired."}),"\n",(0,r.jsx)(t.h2,{id:"spend-key",children:"Spend Key"}),"\n",(0,r.jsx)(t.p,{children:"This is a vault\u2019s primary key used for signing transactions. It can be either a passkey or a hardware key from the Chia Signer app."}),"\n",(0,r.jsx)(t.h2,{id:"recovery-key",children:"Recovery Key"}),"\n",(0,r.jsx)(t.p,{children:"This key can only be used for recovering a vault. It cannot be used for signing transactions. Currently it must be a BLS key. In the future, we will also enable passkeys, as well as hardware and software keys from the Chia Signer app."}),"\n",(0,r.jsx)(t.h2,{id:"transaction-fee",children:"Transaction Fee"}),"\n",(0,r.jsx)(t.p,{children:"A fee for speeding up your transaction\u2019s confirmation time if the network is busy. Testnet11 is often being dusted with small transactions, so we recommend including a fee whenever possible. Typically 0.001 TXCH is sufficient for fast confirmation on testnet11."}),"\n",(0,r.jsx)(t.h2,{id:"recovery-clawback",children:"Recovery Clawback"}),"\n",(0,r.jsx)(t.p,{children:'When you create a new vault, you need to input the amount of time to wait before a recovery can be completed. This is the "recovery clawback" time. During this time window, you can cancel the recovery if it was initiated maliciously. Note that the default recovery clawback time for the beta is 15 minutes. On mainnet, most people will want to set this to something like 48-72 hours in order to provide ample time to cancel the recovery if necessary.'}),"\n",(0,r.jsx)(t.h2,{id:"recovery-phrase",children:"Recovery Phrase"}),"\n",(0,r.jsx)(t.p,{children:"If you use a BLS key as the recovery key, you will be given a series of 24 words to copy. This is the recovery phrase. You will need to enter this phrase upon initiating a vault recovery. Be sure to copy this phrase carefully, and don\u2019t show it to anyone. We don\u2019t store a copy of this phrase, so we can only show it to you when you create your vault."}),"\n",(0,r.jsx)(t.h2,{id:"recovery-timer",children:"Recovery Timer"}),"\n",(0,r.jsx)(t.p,{children:"This is the amount of time you must wait before a recovery operation can be completed. The timer is set upon the vault\u2019s creation, and it can only be modified during a recovery. For example, when you create a vault, if you set this timer to 3 days, then after you initiate a recovery, you will need to wait for 3 days to complete it. During that time, you can cancel the recovery. The reason this timer exists is so that if someone steals your recovery key, you can cancel any recovery attempts, and send your assets to a new vault."}),"\n",(0,r.jsx)(t.h2,{id:"signer-app",children:"Signer App"}),"\n",(0,r.jsx)(t.p,{children:"A smartphone app initially available for iPhones made after 2013. The app stores a spend key in its Secure Enclave. This key cannot be copied or removed from the phone, so the only way to steal it is to gain physical access to the device. For this reason, we strongly recommend that you secure the Signer app using your phone\u2019s biometrics."}),"\n",(0,r.jsx)(t.h2,{id:"clawback",children:"Clawback"}),"\n",(0,r.jsx)(t.p,{children:"You can optionally add a time span to a transaction during which you can claw it back. During this time, the recipient can see the incoming transaction, but cannot access the funds. Clawback is primarily useful to prevent sending funds to the wrong address."}),"\n",(0,r.jsx)(t.p,{children:"For example, Alice sends 1 XCH to Bob, and she adds a 1-hour clawback."}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"For the next hour, Bob can see the incoming XCH in his vault's transaction list, but he cannot access it."}),"\n",(0,r.jsx)(t.li,{children:"Let's say Alice accidentally sent the XCH to the wrong address. During the 1-hour clawback period, she can claw the 1 XCH back to her vault."}),"\n",(0,r.jsx)(t.li,{children:"On the other hand, maybe Bob contacts Alice to let her know that he can see the incoming XCH. In this case, Alice can finalize the transaction before the 1-hour timer has expired."}),"\n",(0,r.jsx)(t.li,{children:"After the 1-hour timer has expired, Alice can no longer claw back the funds. The 1 XCH is now automatically counted with Bob's vault balance."}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},8453:(e,t,a)=>{a.d(t,{R:()=>s,x:()=>i});var n=a(6540);const r={},o=n.createContext(r);function s(e){const t=n.useContext(o);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),n.createElement(o.Provider,{value:t},e.children)}},9365:(e,t,a)=>{a.d(t,{A:()=>s});a(6540);var n=a(4164);const r={tabItem:"tabItem_Ymn6"};var o=a(4848);function s({children:e,hidden:t,className:a}){return(0,o.jsx)("div",{role:"tabpanel",className:(0,n.A)(r.tabItem,a),hidden:t,children:e})}}}]);