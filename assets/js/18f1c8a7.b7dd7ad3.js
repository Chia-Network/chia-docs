"use strict";(self.webpackChunkchia_docs=self.webpackChunkchia_docs||[]).push([[7346],{7766:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>f,frontMatter:()=>o,metadata:()=>t,toc:()=>h});const t=JSON.parse('{"id":"guides/cat/cr-cat-tutorial","title":"CR-CAT Creation Tutorial","description":"Intro","source":"@site/docs/guides/cat/cr-cat-tutorial.md","sourceDirName":"guides/cat","slug":"/guides/cr-CAT-tutorial","permalink":"/guides/cr-CAT-tutorial","draft":false,"unlisted":false,"editUrl":"https://github.com/Chia-Network/chia-docs/blob/main/docs/guides/cat/cr-cat-tutorial.md","tags":[],"version":"current","frontMatter":{"slug":"/guides/cr-CAT-tutorial","title":"CR-CAT Creation Tutorial"},"sidebar":"guides","previous":{"title":"CAT Creation Tutorial","permalink":"/guides/cat-creation-tutorial"},"next":{"title":"DataLayer\u2122","permalink":"/guides/datalayer-developer-guide"}}');var a=s(4848),i=s(8453),l=s(5537),r=s(9329);const o={slug:"/guides/cr-CAT-tutorial",title:"CR-CAT Creation Tutorial"},c=void 0,d={},h=[{value:"Intro",id:"intro",level:2},{value:"Definitions",id:"definitions",level:2},{value:"Setup",id:"setup",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"DID and VC Setup",id:"did-and-vc-setup",level:3},{value:"Authorized Provider Wallet",id:"authorized-provider-wallet",level:4},{value:"VC Holder Wallet",id:"vc-holder-wallet",level:4},{value:"XCH Wallet",id:"xch-wallet",level:4},{value:"CAT Admin Tool",id:"cat-admin-tool",level:3},{value:"Automatic CATs",id:"automatic-cats",level:3},{value:"Setup summary",id:"setup-summary",level:3},{value:"Mint CR-CATs",id:"mint-cr-cats",level:2},{value:"Send CR-CATs",id:"send-cr-cats",level:2},{value:"Sending from the GUI",id:"sending-from-the-gui",level:3},{value:"Sending from the CLI",id:"sending-from-the-cli",level:3},{value:"Offer CR-CATs",id:"offer-cr-cats",level:2},{value:"GUI Offers",id:"gui-offers",level:3},{value:"CLI Offers",id:"cli-offers",level:3},{value:"When Proofs Are Missing",id:"when-proofs-are-missing",level:2},{value:"Sending CR-CATs",id:"sending-cr-cats",level:3},{value:"Offers for CR-CATs",id:"offers-for-cr-cats",level:3}];function u(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"intro",children:"Intro"}),"\n",(0,a.jsx)(n.p,{children:"Credential Restricted Chia Asset Tokens (CR-CATs) are CATs whose ownership is restricted to people or other entities who possess a required set of Verifiable Credentials (VCs). This guide will show you how to mint CR-CATs, as well as how to distribute them accordingly."}),"\n",(0,a.jsx)(n.p,{children:"For additional resources, see the following:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"https://github.com/Chia-Network/chips/pull/68",children:"CHIP-19"})," -- Restricted CAT Standard"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"/cat-admin-cli",children:"CAT admin"})," -- CLI documentation for the CAT admin tool"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"/guides/verifiable-credentials-guide",children:"VC guide"})," -- VCs are required in order to use CR-CATs"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"https://chialisp.com/cats",children:"CAT standard"})," -- Good to read if you are unfamiliar with Chia Asset Tokens"]}),"\n"]}),"\n",(0,a.jsxs)(n.admonition,{type:"warning",children:[(0,a.jsx)(n.p,{children:"The commands in this guide are only examples. Be sure to replace the listed values with values from your local system."}),(0,a.jsx)(n.p,{children:"This guide was creating using testnet11. The example commands use a fee of 100 million mojos, which will be rather high for mainnet usage. If running on mainnet, be sure to adjust your fees accordingly."})]}),"\n",(0,a.jsx)(n.h2,{id:"definitions",children:"Definitions"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Decentralized Identifier (DID)"})," -- An identifier that enables verifiable, decentralized digital identity"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Verifiable Credential (VC)"})," -- Allows someone or something to prove that a subject belongs to a certain category or categories, such as being a US citizen. One type of VC is issued by a Know Your Customer (KYC) provider, who must perform this verification."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Chia Asset Tokens (CATs)"})," -- Fungible tokens on the Chia blockchain"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,a.jsx)(n.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,a.jsx)(n.p,{children:"In order to mint CR-CATs, you will need to have:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["A synced Chia wallet, running version 2.0 or later (a full node is ",(0,a.jsx)(n.em,{children:"not"})," required)"]}),"\n",(0,a.jsx)(n.li,{children:"At least one DID to be used as a trusted provider"}),"\n",(0,a.jsx)(n.li,{children:"A sufficient amount of XCH or TXCH for the minting. As a reminder, each CAT consists of 1000 mojos. If you want to mint 1 billion CATs, you will need 1 trillion mojos (1 XCH) for the minting."}),"\n",(0,a.jsx)(n.li,{children:"Sufficient funds to cover blockchain fees, the amount of which depends on how busy the blockchain is at any moment"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"We have faucets available if you don't have sufficient funds to get started:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://testnet11-faucet.chia.net/",children:"testnet"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://faucet.chia.net/",children:"mainnet"})}),"\n"]}),"\n",(0,a.jsxs)(n.admonition,{title:"important",type:"warning",children:[(0,a.jsxs)(n.p,{children:["It is possible to brick* funds by sending them to an address without the appropriate credentials, as will be demonstrated later in this guide. You are therefore recommended to test minting CR-CATs on the testnet or on a simulator prior to minting them on mainnet. If you are unsure of how to configure your wallet to use the testnet, see our ",(0,a.jsx)(n.a,{href:"https://docs.chia.net/guides/chialisp-testnet-setup",children:"guide"}),"."]}),(0,a.jsx)(n.p,{children:"* Technically, the funds will remain recoverable, but this process will not be easy."})]}),"\n",(0,a.jsx)(n.h3,{id:"did-and-vc-setup",children:"DID and VC Setup"}),"\n",(0,a.jsx)(n.p,{children:"CR-CATs require at least one authorized provider that can issue VCs that are allowed to trade the CATs. This tutorial will use a DID as the authorized provider."}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsxs)(n.p,{children:["DIDs are currently the ",(0,a.jsx)(n.em,{children:"only"})," type of authorized provider, though others might be added in the future."]})}),"\n",(0,a.jsxs)(n.p,{children:["Please see our ",(0,a.jsx)(n.a,{href:"/guides/verifiable-credentials-guide",children:"Verifiable Credentials Guide"})," for help on setting up a DID, as well as a VC with appropriate proofs."]}),"\n",(0,a.jsx)(n.p,{children:"For this tutorial, we will use the same proof structure that was used in the Verifiable Credentials Guide, so if you have followed it, you will be mostly ready to follow this tutorial as well."}),"\n",(0,a.jsx)(n.p,{children:"We will use three separate Chia wallets, which have been created beforehand using the Verifiable Credentials Guide:"}),"\n",(0,a.jsx)(n.h4,{id:"authorized-provider-wallet",children:"Authorized Provider Wallet"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Owns one DID -- ",(0,a.jsx)(n.code,{children:"did:chia:1w4gf5eyensd37xa0x7aj27fe4cr9tqmf46m272suve5n4q2draesd0t54c"})]}),"\n",(0,a.jsxs)(n.li,{children:["Used this DID to mint a VC with launcher ID ",(0,a.jsx)(n.code,{children:"9b6c65bd82ebe139ad5785ffdf99f6fe8ccbedb62a7ba2560989ef4e8a00ec86"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Added two proofs: ",(0,a.jsx)(n.code,{children:"test_proof1"})," and ",(0,a.jsx)(n.code,{children:"test_proof2"})]}),"\n",(0,a.jsx)(n.li,{children:'"Transferred" this VC to the same wallet'}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.li,{children:"Minted another VC with the same proofs and transferred it to the VC Holder Wallet (see next section)"}),"\n",(0,a.jsx)(n.li,{children:"This wallet will issue the CR-CATs and send some of them to the VC Holder"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"The CLI view of the Authorized Provider's wallet is as follows:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"Balances, fingerprint: 3152280463\n\nChia Wallet:\n   -Total Balance:         0.999499999997 txch (999499999997 mojo)\n   -Pending Total Balance: 0.999499999997 txch (999499999997 mojo)\n   -Spendable:             0.999499999997 txch (999499999997 mojo)\n   -Type:                  STANDARD_WALLET\n   -Wallet ID:             1\n\nProfile 1:\n   -Total Balance:         1.0\n   -Pending Total Balance: 1.0\n   -Spendable:             1.0\n   -Type:                  DECENTRALIZED_ID\n   -DID ID:                did:chia:1w4gf5eyensd37xa0x7aj27fe4cr9tqmf46m272suve5n4q2draesd0t54c\n   -Wallet ID:             2\n\nNFT Wallet:\n   -Total Balance:         0.0\n   -Pending Total Balance: 0.0\n   -Spendable:             0.0\n   -Type:                  NFT\n   -DID ID:                did:chia:1w4gf5eyensd37xa0x7aj27fe4cr9tqmf46m272suve5n4q2draesd0t54c\n   -Wallet ID:             3\n\nVCWallet:\n   -Total Balance:         0.0\n   -Pending Total Balance: 0.0\n   -Spendable:             0.0\n   -Type:                  VC\n   -Wallet ID:             4\n"})}),"\n",(0,a.jsx)(n.p,{children:"The CLI view of the Authorized Provider's VC is as follows:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"Proofs:\n  - f063e22557705b14425b8fca60018796b4364eb6354f45d0b99431a71d3043e5\n    - test_proof1\n    - test_proof2\n\nLauncher ID: 9b6c65bd82ebe139ad5785ffdf99f6fe8ccbedb62a7ba2560989ef4e8a00ec86\nCoin ID: 1d24b1eb6909fcded260c7a6da092fc3d95156c217e6f7944ee3a75473730737\nInner Address: txch1jl9wvatyyy6lwt7eswa9ax7sydzr80tww6npfupd5jj95le3p4ssvcped6\nProof Hash: f063e22557705b14425b8fca60018796b4364eb6354f45d0b99431a71d3043e5\n"})}),"\n",(0,a.jsx)(n.p,{children:"The VC is also viewable from the GUI:"}),"\n",(0,a.jsx)("div",{style:{textAlign:"center"},children:(0,a.jsx)("img",{src:"/img/cr-cat/01_cr-cat.png",alt:"Authorized provider VC"})}),"\n",(0,a.jsx)("br",{}),"\n",(0,a.jsx)(n.h4,{id:"vc-holder-wallet",children:"VC Holder Wallet"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Holds a VC with launcher ID ",(0,a.jsx)(n.code,{children:"5b5389e77b7ec8e9ebd7d92136254418ca674e382031d29aaa6ab75b7822792b"})," and two proofs: ",(0,a.jsx)(n.code,{children:"test_proof1"})," and ",(0,a.jsx)(n.code,{children:"test_proof2"}),". This VC was provided by the Authorized Provider wallet."]}),"\n",(0,a.jsx)(n.li,{children:"Does not own a DID"}),"\n",(0,a.jsx)(n.li,{children:"This wallet will receive some CR-CATs from the Authorized Provider"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"The CLI view of the VC Holder's wallet is as follows:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"Balances, fingerprint: 455644407\n\nChia Wallet:\n   -Total Balance:         0.5 txch (500000000000 mojo)\n   -Pending Total Balance: 0.5 txch (500000000000 mojo)\n   -Spendable:             0.5 txch (500000000000 mojo)\n   -Type:                  STANDARD_WALLET\n   -Wallet ID:             1\n\nVCWallet:\n   -Total Balance:         0.0\n   -Pending Total Balance: 0.0\n   -Spendable:             0.0\n   -Type:                  VC\n   -Wallet ID:             2\n"})}),"\n",(0,a.jsx)(n.p,{children:"The CLI view of the VC Holder's VC is as follows:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"Proofs:\n  - f063e22557705b14425b8fca60018796b4364eb6354f45d0b99431a71d3043e5\n    - test_proof1\n    - test_proof2\n\nLauncher ID: 5b5389e77b7ec8e9ebd7d92136254418ca674e382031d29aaa6ab75b7822792b\nCoin ID: 87781377b81b54c56df4e1fc3558757065409fe65ecab16de89f8d07f7a7cecb\nInner Address: txch1hsyj53wz3wzznxdd0kupk075yj2muew8q49yj83yh5tde92x0uxst6ztpg\nProof Hash: f063e22557705b14425b8fca60018796b4364eb6354f45d0b99431a71d3043e5\n"})}),"\n",(0,a.jsx)(n.p,{children:"The VC is also viewable from the GUI:"}),"\n",(0,a.jsx)("div",{style:{textAlign:"center"},children:(0,a.jsx)("img",{src:"/img/cr-cat/02_cr-cat.png",alt:"Holder VC"})}),"\n",(0,a.jsx)("br",{}),"\n",(0,a.jsx)(n.h4,{id:"xch-wallet",children:"XCH Wallet"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Does not hold any DIDs or VCs"}),"\n",(0,a.jsx)(n.li,{children:"This wallet will demonstrate that CR-CATs can only be held by wallets that hold a required set of VCs"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"The CLI view of the XCH wallet is as follows:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"Balances, fingerprint: 2811450244\n\nChia Wallet:\n   -Total Balance:         0.5 txch (500000000000 mojo)\n   -Pending Total Balance: 0.5 txch (500000000000 mojo)\n   -Spendable:             0.5 txch (500000000000 mojo)\n   -Type:                  STANDARD_WALLET\n   -Wallet ID:             1\n"})}),"\n",(0,a.jsx)(n.h3,{id:"cat-admin-tool",children:"CAT Admin Tool"}),"\n",(0,a.jsx)(n.p,{children:"CR-CATS are issued from the CAT-admin-tool repository. Follow the instructions below to install it for your specific OS:"}),"\n",(0,a.jsxs)(l.A,{defaultValue:"mac",groupId:"os",values:[{label:"Linux/macOS",value:"mac"},{label:"Windows",value:"windows"}],children:[(0,a.jsxs)(r.A,{value:"mac",children:[(0,a.jsx)(n.p,{children:"Clone the repository:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/Chia-Network/CAT-admin-tool.git -b main --recurse-submodules\n"})}),(0,a.jsx)(n.p,{children:"Change to the CAT-admin-tool directory:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"cd CAT-admin-tool\n"})}),(0,a.jsx)(n.p,{children:"Create a virtual environment:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"python3 -m venv venv\n"})}),(0,a.jsx)(n.p,{children:"Activate the virtual environment:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:". ./venv/bin/activate\n"})}),(0,a.jsx)(n.p,{children:"Install all prerequisites:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"python3 -m pip install --upgrade pip setuptools wheel\n"})}),(0,a.jsx)(n.p,{children:"Install the CAT admin tool:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"pip install .\n"})})]}),(0,a.jsxs)(r.A,{value:"windows",children:[(0,a.jsx)(n.p,{children:"Clone the repository:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/Chia-Network/CAT-admin-tool.git -b main --recurse-submodules\n"})}),(0,a.jsx)(n.p,{children:"Change to the CAT-admin-tool directory:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"cd CAT-admin-tool\n"})}),(0,a.jsx)(n.p,{children:"Create a virtual environment:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"python -m venv venv\n"})}),(0,a.jsx)(n.p,{children:"Activate the virtual environment:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:".\\venv\\Scripts\\Activate.ps1\n"})}),(0,a.jsx)(n.p,{children:"Install all prerequisites:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"python -m pip install --upgrade pip setuptools wheel\n"})}),(0,a.jsx)(n.p,{children:"Install the CAT admin tool:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"pip install .\n"})})]})]}),"\n",(0,a.jsx)(n.p,{children:"Your environment should be all set, but let's make sure:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Run ",(0,a.jsx)(n.code,{children:"cats --help"}),". You should get a usage statement."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Run ",(0,a.jsx)(n.code,{children:"cdv --help"}),". You should get another usage statement."]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"The CAT admin tool also comes bundled with a version of Chia. If your wallet is not currently running, be sure to start it now:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"chia start wallet\n"})}),"\n",(0,a.jsx)(n.p,{children:"Note that while a full node is not required, it is recommended, as it will make the the process of minting CR-CATs faster and more efficient."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"chia start node\n"})}),"\n",(0,a.jsx)(n.p,{children:"If you are running a full node, verify that it is synced by running this command:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"chia show -s\n"})}),"\n",(0,a.jsxs)(n.p,{children:["For a comprehensive list of all options available with the CAT admin tool, as well as examples of how to use them, see the ",(0,a.jsx)(n.a,{href:"/cat-admin-cli",children:"CLI reference"}),"."]}),"\n",(0,a.jsx)(n.h3,{id:"automatic-cats",children:"Automatic CATs"}),"\n",(0,a.jsxs)(n.p,{children:["Before continuing, it is a good idea to verify that new CATs will automatically be added to your wallet. The setting for this is located in ",(0,a.jsx)(n.code,{children:"~/.chia/mainnet/config/config.yaml"}),". (Note that this file is in a ",(0,a.jsx)(n.code,{children:"mainnet"})," folder regardless of whether you are running on a testnet or mainnet.)"]}),"\n",(0,a.jsxs)(n.p,{children:["Edit this file and search for ",(0,a.jsx)(n.code,{children:"automatically_add_unknown_cats"}),". You are recommended to set this option's value to ",(0,a.jsx)(n.code,{children:"true"}),". Be sure to restart your wallet if you modify this option, so your new CR-CATs will automatically be added to your wallet."]}),"\n",(0,a.jsxs)(n.p,{children:["If you prefer not to use this option, you can also manually add new CATs with the ",(0,a.jsx)(n.a,{href:"/wallet-cli#add_token",children:"add_token"})," command."]}),"\n",(0,a.jsx)(n.h3,{id:"setup-summary",children:"Setup summary"}),"\n",(0,a.jsx)(n.p,{children:"At this point, in order to follow this tutorial you should have:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["An instance of the cat-admin-tool repository installed locally","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Verifiable by running ",(0,a.jsx)(n.code,{children:"cats --help"})," and ",(0,a.jsx)(n.code,{children:"cdv --help"})," (you should see a usage statement)"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["An Authorized Provider's wallet, which holds:","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"A DID"}),"\n",(0,a.jsx)(n.li,{children:"A VC"}),"\n",(0,a.jsx)(n.li,{children:"Some XCH or TXCH"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["A VC Holder's wallet, which holds:","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"A VC"}),"\n",(0,a.jsx)(n.li,{children:"Some XCH or TXCH"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.li,{children:"(If you want to test a failure case) A wallet that only holds some XCH or TXCH"}),"\n",(0,a.jsx)(n.li,{children:"(recommended) A synced full node"}),"\n",(0,a.jsxs)(n.li,{children:["(recommended) Set ",(0,a.jsx)(n.code,{children:"automatically_add_unknown_cats: true"})," in ",(0,a.jsx)(n.code,{children:"config.yaml"})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"With all of these setup steps complete, you are ready to mint CR-CATs!"}),"\n",(0,a.jsx)(n.h2,{id:"mint-cr-cats",children:"Mint CR-CATs"}),"\n",(0,a.jsxs)(n.p,{children:["The process for minting Restricted CATs is nearly identical to the process for minting standard CATs. In both cases, any TAIL may be used. This tutorial will only demonstrate how to use a single-issuance TAIL. If you are interested in using other TAILs, or if you would like a more comprehensive list of instructions, see the ",(0,a.jsx)(n.a,{href:"/guides/cat-creation-tutorial",children:"CAT creation tutorial"}),"."]}),"\n",(0,a.jsx)(n.p,{children:"For starters, you will need to obtain an address to send the CR-CATs to after they have been minted. From the Authorized Provider's wallet run the following command:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"chia wallet get_address --new-address\n"})}),"\n",(0,a.jsx)(n.p,{children:"The response will be an address, for example:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"txch1yx4tdtqksjh7mk84deglwyq4j8td8jchyc8sdgem2hnuulmhzdhqct9wpr\n"})}),"\n",(0,a.jsx)(n.p,{children:"Next, obtain the Authorized Provider's DID ID by showing the wallet:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"chia wallet show\n"})}),"\n",(0,a.jsx)(n.p,{children:"Response (truncated):"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"...\nProfile 1:\n   -Total Balance:         1.0\n   -Pending Total Balance: 1.0\n   -Spendable:             1.0\n   -Type:                  DECENTRALIZED_ID\n   -DID ID:                did:chia:1w4gf5eyensd37xa0x7aj27fe4cr9tqmf46m272suve5n4q2draesd0t54c\n   -Wallet ID:             2\n...\n"})}),"\n",(0,a.jsx)(n.p,{children:"In this example, we will create one thousand CR-CATs. Each CR-CAT will consist of 1000 mojos (same as standard CATs), so this example will require one million mojos, plus a transaction fee, for the issuance."}),"\n",(0,a.jsx)(n.p,{children:"When minting CR-CATs, you have two options for applying restrictions:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"-r"}),"/",(0,a.jsx)(n.code,{children:"--proofs-checker"})," -- Use this option to supply a custom program for checking proofs (not yet supported in the reference wallet)."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"-v"}),"/",(0,a.jsx)(n.code,{children:"--cr-flag"})," -- Use this option to specify which proof(s) a VC must have in order to approve a transaction from this CR-CAT."]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["For this example, we will use the ",(0,a.jsx)(n.code,{children:"-v"})," option."]}),"\n",(0,a.jsxs)(n.p,{children:["We also need to add the ",(0,a.jsx)(n.code,{children:"-sc"})," flag to select a valid coin to spend. Here is a summary of the options that will be used in this example:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"-l"})," -- the TAIL to use"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"-t"})," -- the address to send the CR-CATs to upon being minted"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"-a"})," -- the amount, in mojos, to use for the minting"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"-m"})," -- an optional blockchain fee, in mojos"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"-d"})," -- the authorized provider (DID) for issuing VCs for these CR-CATs"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"-v"})," -- the string required in a VC proof for trading these CR-CATs"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"-sc"})," -- return a valid coin to spend for the minting"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"And here is the example command:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'cats -l ./reference_tails/genesis_by_coin_id.clsp.hex -t txch1yx4tdtqksjh7mk84deglwyq4j8td8jchyc8sdgem2hnuulmhzdhqct9wpr -a 1000000 -m 100000000 -d did:chia:1w4gf5eyensd37xa0x7aj27fe4cr9tqmf46m272suve5n4q2draesd0t54c -v "test_proof1" -sc\n'})}),"\n",(0,a.jsx)(n.p,{children:"The response will list the details of a coin from your wallet. For example:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'{\n    "amount": 999499999997,\n    "parent_coin_info": "0xd0e21a74601b8bafb6e1c90c61ff74bad40820e3003d25230fc127ce3efc5a48",\n    "puzzle_hash": "0x29b1afc3a6caa21a4aaba3a928df4dbbc3e3b9b2b15f89529311ae12d6cec82b"\n}\nName: 1d9cb45618bdd9d70a0959ab8d91cafcbc1acbf7bd31a9e5286fd30622796783\n'})}),"\n",(0,a.jsxs)(n.p,{children:["The value of ",(0,a.jsx)(n.code,{children:"Name:"})," will be used next. If you received an error containing ",(0,a.jsx)(n.code,{children:"Can't spend more than wallet balance:"}),", then you do not have sufficient funds to cover the amount specified in the ",(0,a.jsx)(n.code,{children:"-a"})," and ",(0,a.jsx)(n.code,{children:"-m"})," options."]}),"\n",(0,a.jsxs)(n.p,{children:["Next, run the same command again, but replace ",(0,a.jsx)(n.code,{children:"-sc"})," with ",(0,a.jsx)(n.code,{children:"-c 0x<coin name>"}),", or ",(0,a.jsx)(n.code,{children:"-c 0x1d9cb45618bdd9d70a0959ab8d91cafcbc1acbf7bd31a9e5286fd30622796783"})," in this example."]}),"\n",(0,a.jsxs)(n.admonition,{title:"important",type:"warning",children:[(0,a.jsxs)(n.p,{children:["When minting CR-CATs with the commands from this tutorial, you must prepend ",(0,a.jsx)(n.code,{children:"0x"})," to the coin ID in the following command. If you fail to do this, the command will appear to succeed, but it will actually fail. The reasons for not showing an error are twofold:"]}),(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["You are technically allowed to curry anything with this command's underlying CLVM puzzle, so omitting the ",(0,a.jsx)(n.code,{children:"0x"})," is valid syntax, even though it won't work in this case."]}),"\n",(0,a.jsx)(n.li,{children:"The wallet client asynchronously sends the command to the node, so the wallet client does not know when the command fails."}),"\n"]})]}),"\n",(0,a.jsxs)(n.p,{children:["For example, this command will mint the CR-CATs using the ",(0,a.jsx)(n.code,{children:"-c"})," option:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'cats -l ./reference_tails/genesis_by_coin_id.clsp.hex -t txch1yx4tdtqksjh7mk84deglwyq4j8td8jchyc8sdgem2hnuulmhzdhqct9wpr -a 1000000 -m 100000000 -d did:chia:1w4gf5eyensd37xa0x7aj27fe4cr9tqmf46m272suve5n4q2draesd0t54c -v "test_proof1" -c 0x1d9cb45618bdd9d70a0959ab8d91cafcbc1acbf7bd31a9e5286fd30622796783\n'})}),"\n",(0,a.jsx)(n.p,{children:"As a result, a new spend bundle will be created for the minting. You will be prompted whether to submit it to the network:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"The transaction has been created, would you like to push it to the network? (Y/N)\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Respond with ",(0,a.jsx)(n.code,{children:"Y"})," and you should be shown the ",(0,a.jsx)(n.code,{children:"Asset ID"})," and ",(0,a.jsx)(n.code,{children:"Eve Coin ID"})," for this CR-CAT. For example:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"Successfully pushed the transaction to the network\nAsset ID: 3ba9e16dca39f3fb3b75e51535487fcd114abeeb0cf30e8975b9567ce5516fb5\nEve Coin ID: 7afe650fd4dd663d0be027c07228d02546fcc7b91b7819d18d5e1d4055292bf1\n"})}),"\n",(0,a.jsxs)(n.p,{children:["After the transaction has been confirmed on blockchain (typically within 1-3 minutes), you can view the new CAT with the ",(0,a.jsx)(n.code,{children:"chia wallet show"})," command:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"chia wallet show\n"})}),"\n",(0,a.jsx)(n.p,{children:"Response (truncated):"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"...\nCAT 3ba9e16dca39f3fb...:\n   -Total Balance:                      1000.0  (1000000 mojo)\n   -Balance Pending VC Approval:        0.0  (0 mojo)\n   -Pending Total Balance:              1000.0  (1000000 mojo)\n   -Spendable:                          1000.0  (1000000 mojo)\n   -Type:                               CRCAT\n   -Asset ID:                           3ba9e16dca39f3fb3b75e51535487fcd114abeeb0cf30e8975b9567ce5516fb5\n   -Wallet ID:                          5\n...\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Note that ",(0,a.jsx)(n.code,{children:"Balance Pending VC Approval"})," is currently ",(0,a.jsx)(n.code,{children:"0.0"}),'. This is because the CR-CATs have been minted to the wallet that contains the issuing DID. Thus, they do not require approval. When these funds are transferred, they will show up as "Pending" in the new wallet.']}),"\n",(0,a.jsx)(n.p,{children:"This information is also viewable in the GUI:"}),"\n",(0,a.jsx)("div",{style:{textAlign:"center"},children:(0,a.jsx)("img",{src:"/img/cr-cat/03_cr-cat.png",alt:"CR-CAT issuance"})}),"\n",(0,a.jsx)("br",{}),"\n",(0,a.jsxs)(n.p,{children:["The Authorized Provider now has control of all 1000 of the issued CR-CATs. This type of CAT is distinguished in the GUI by a padlock icon and ",(0,a.jsx)(n.code,{children:"Restricted CAT"}),". The Authorized Provider also possesses a VC with the required proof (",(0,a.jsx)(n.code,{children:"test_proof1"}),"), so a green icon appears when viewing the CAT."]}),"\n",(0,a.jsx)(n.h2,{id:"send-cr-cats",children:"Send CR-CATs"}),"\n",(0,a.jsx)(n.p,{children:"Now that you have minted the CR-CATs, you can send them elsewhere. First, we'll send some to the VC Holder's wallet, which already has a VC that contains the required proof."}),"\n",(0,a.jsx)(n.h3,{id:"sending-from-the-gui",children:"Sending from the GUI"}),"\n",(0,a.jsx)(n.p,{children:"You can send CR-CATs just as you would with regular CATs:"}),"\n",(0,a.jsx)("div",{style:{textAlign:"center"},children:(0,a.jsx)("img",{src:"/img/cr-cat/04_cr-cat.png",alt:"CR-CAT send"})}),"\n",(0,a.jsx)("br",{}),"\n",(0,a.jsx)(n.p,{children:'You should see a "success" message:'}),"\n",(0,a.jsx)("div",{style:{textAlign:"center"},children:(0,a.jsx)("img",{src:"/img/cr-cat/05_cr-cat.png",alt:"CR-CAT send success"})}),"\n",(0,a.jsx)("br",{}),"\n",(0,a.jsxs)(n.p,{children:["In this example, the recipient is the VC Holder's wallet. This wallet holds the credential with the required proof (",(0,a.jsx)(n.code,{children:"test_proof1"}),") for holding this CR-CAT. Because the proof exists, a green ",(0,a.jsx)(n.code,{children:"APPROVE"})," button will appear."]}),"\n",(0,a.jsx)(n.p,{children:"From the VC Holder's wallet, click this button to finalize the transaction:"}),"\n",(0,a.jsx)("div",{style:{textAlign:"center"},children:(0,a.jsx)("img",{src:"/img/cr-cat/06_cr-cat.png",alt:"VC Holder Approve"})}),"\n",(0,a.jsx)("br",{}),"\n",(0,a.jsxs)(n.p,{children:["An on-chain transaction is required for the approval to be processed. This is necessary to guard against unauthorized wallets holding CR-CATs, as will be demonstrated later in this tutorial. Enter a transaction fee and click ",(0,a.jsx)(n.code,{children:"APPROVE PENDING TRANSACTIONS"}),":"]}),"\n",(0,a.jsx)("div",{style:{textAlign:"center"},children:(0,a.jsx)("img",{src:"/img/cr-cat/07_cr-cat.png",alt:"Approve pending transactions"})}),"\n",(0,a.jsx)("br",{}),"\n",(0,a.jsx)(n.p,{children:"After the transaction has been processed, the CR-CATs will become available to the VC Holder, who can now send or trade them just like normal CATs."}),"\n",(0,a.jsx)("div",{style:{textAlign:"center"},children:(0,a.jsx)("img",{src:"/img/cr-cat/08_cr-cat.png",alt:"CR-CAT approved"})}),"\n",(0,a.jsx)("br",{}),"\n",(0,a.jsx)(n.h3,{id:"sending-from-the-cli",children:"Sending from the CLI"}),"\n",(0,a.jsxs)(n.p,{children:["As a reminder, in the Authorized Provider's wallet, the ",(0,a.jsx)(n.code,{children:"Wallet ID"})," of the CR-CAT is ",(0,a.jsx)(n.code,{children:"5"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"CAT 3ba9e16dca39f3fb...:\n   -Total Balance:                      950.0  (950000 mojo)\n   -Balance Pending VC Approval:        0.0  (0 mojo)\n   -Pending Total Balance:              950.0  (950000 mojo)\n   -Spendable:                          950.0  (950000 mojo)\n   -Type:                               CRCAT\n   -Asset ID:                           3ba9e16dca39f3fb3b75e51535487fcd114abeeb0cf30e8975b9567ce5516fb5\n   -Wallet ID:                          5\n"})}),"\n",(0,a.jsxs)(n.p,{children:["From the CLI, run a standard ",(0,a.jsx)(n.code,{children:"send"})," command. In this example, we will use the following flags:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"-i"})," -- The ",(0,a.jsx)(n.code,{children:"Wallet ID"})," of the CR-CAT"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"-a"})," -- The number of CR-CATs to send"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"-m"})," -- An optional transaction free, in XCH/TXCH"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"-t"})," -- The address to send the CR-CATs to (the VC Holder's wallet address)"]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"chia wallet send -i 5 -a 100 -m 0.0001 -t txch1hsyj53wz3wzznxdd0kupk075yj2muew8q49yj83yh5tde92x0uxst6ztpg\n"})}),"\n",(0,a.jsx)(n.p,{children:"Response:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"Submitting transaction...\nTransaction submitted to nodes: [{'peer_id': 'b3d9de85d29931c10050b56c7afb91c99141943fc81ff2d1a8425e52be0d08ab', 'inclusion_status': 'SUCCESS', 'error_msg': None}]\nRun 'chia wallet get_transaction -f 3152280463 -tx 0xab577bdce7fdd1be8b4e0634ad69aa5cff66f6d9dc7d26e0119d1a3a740f91e8' to get status\n"})}),"\n",(0,a.jsx)(n.p,{children:"After a few minutes, run the command from the previous command's output to view the transaction. For example:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"chia wallet get_transaction -f 3152280463 -tx 0xab577bdce7fdd1be8b4e0634ad69aa5cff66f6d9dc7d26e0119d1a3a740f91e8\n"})}),"\n",(0,a.jsx)(n.p,{children:"The response should show that this transaction has been confirmed:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"Transaction ab577bdce7fdd1be8b4e0634ad69aa5cff66f6d9dc7d26e0119d1a3a740f91e8\nStatus: Confirmed\nAmount sent: 100 CAT 3ba9e16dca39f3fb...\nTo address: txch1yzjq802ym3lv9aupl6nyvv6s24fdm9wpnte2rvhk04arr3jyt4js2287gz\nCreated at: 2023-09-22 09:21:25\n"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"After switching to the VC Holder's wallet"}),", you should see the CR-CATs that are pending approval (in this case ",(0,a.jsx)(n.code,{children:"100.0  (100000 mojo)"}),"):"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"chia wallet show\n"})}),"\n",(0,a.jsx)(n.p,{children:"Response:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"Balances, fingerprint: 455644407\n\nChia Wallet:\n   -Total Balance:         0.499993999384 txch (499993999384 mojo)\n   -Pending Total Balance: 0.499993999384 txch (499993999384 mojo)\n   -Spendable:             0.499993999384 txch (499993999384 mojo)\n   -Type:                  STANDARD_WALLET\n   -Wallet ID:             1\n\nVCWallet:\n   -Total Balance:         0.0\n   -Pending Total Balance: 0.0\n   -Spendable:             0.0\n   -Type:                  VC\n   -Wallet ID:             2\n\nCAT 3ba9e16dca39f3fb...:\n   -Total Balance:                      50.0  (50000 mojo)\n   -Balance Pending VC Approval:        100.0  (100000 mojo)\n   -Pending Total Balance:              50.0  (50000 mojo)\n   -Spendable:                          50.0  (50000 mojo)\n   -Type:                               CRCAT\n   -Asset ID:                           3ba9e16dca39f3fb3b75e51535487fcd114abeeb0cf30e8975b9567ce5516fb5\n   -Wallet ID:                          3\n"})}),"\n",(0,a.jsxs)(n.p,{children:["The VC Holder still needs to approve the new CR-CATs in order to add them to the wallet balance. This is accomplished with the ",(0,a.jsx)(n.code,{children:"approve_r_cats"})," command. In this example, we will use the following flags:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"-i"})," -- The ",(0,a.jsx)(n.code,{children:"Wallet ID"})," of the CR-CAT"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"-a"})," -- The amount to approve"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"-m"})," -- An optional transaction free, in XCH/TXCH"]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"chia wallet vcs approve_r_cats -i 3 -a 100 -m 0.0001\n"})}),"\n",(0,a.jsx)(n.p,{children:"Response:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"VC successfully approved R-CATs!\nRelevant TX records:\n\nTransaction 07ce240c734515fa6609121ac1c52c571a8b191715d26620a2242b124767c95d\nStatus: Pending\nAmount received: 100 CAT 3ba9e16dca39f3fb...\nTo address: txch16yqa7dsmax5g258yc2qh57xcs0kxxa53fyc4v8jadl8h6jwf7frsx0s7k4\nCreated at: 2023-09-22 09:30:56\n\nTransaction df859cf5cd348c9531885de978eb083072eff4447748a86463a2d51e3a324298\nStatus: Pending\nAmount sent: 1E-12 TXCH\nTo address: txch1hsyj53wz3wzznxdd0kupk075yj2muew8q49yj83yh5tde92x0uxst6ztpg\nCreated at: 2023-09-22 09:30:56\n\nTransaction 41c06dfb0b4e6bd0ed32c8d4942f10e251a0fd9d7b435c6d5672d8571e3bcab7\nStatus: Pending\nAmount sent: 0 TXCH\nTo address: txch1prssxq8x0s45gzszxpnpwlwpz6p06j5tequtq6ne4fphj7x5yv9qgx493k\nCreated at: 2023-09-22 09:30:56\n"})}),"\n",(0,a.jsx)(n.p,{children:"After this transaction has completed, the new CR-CATs will be available to be spend just like normal CATs:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"CAT 3ba9e16dca39f3fb...:\n   -Total Balance:                      150.0  (150000 mojo)\n   -Balance Pending VC Approval:        0.0  (0 mojo)\n   -Pending Total Balance:              150.0  (150000 mojo)\n   -Spendable:                          150.0  (150000 mojo)\n   -Type:                               CRCAT\n   -Asset ID:                           3ba9e16dca39f3fb3b75e51535487fcd114abeeb0cf30e8975b9567ce5516fb5\n   -Wallet ID:                          3\n"})}),"\n",(0,a.jsx)(n.h2,{id:"offer-cr-cats",children:"Offer CR-CATs"}),"\n",(0,a.jsx)(n.p,{children:"CR-CATs also work with Chia Offers, using either the GUI or the CLI."}),"\n",(0,a.jsx)(n.h3,{id:"gui-offers",children:"GUI Offers"}),"\n",(0,a.jsxs)(n.p,{children:["In this example, as the ",(0,a.jsx)(n.strong,{children:"Authorized Provider"}),", click ",(0,a.jsx)(n.code,{children:"CREATE AN OFFER"})," from the ",(0,a.jsx)(n.code,{children:"Offers"})," panel:"]}),"\n",(0,a.jsx)("div",{style:{textAlign:"center"},children:(0,a.jsx)("img",{src:"/img/cr-cat/09_cr-cat.png",alt:"Create an Offer"})}),"\n",(0,a.jsx)("br",{}),"\n",(0,a.jsx)(n.p,{children:"Next, fill out the Offer Builder. For this example, we will offer to trade 99 CR-CATs for 0.1 TXCH:"}),"\n",(0,a.jsx)("div",{style:{textAlign:"center"},children:(0,a.jsx)("img",{src:"/img/cr-cat/10_cr-cat.png",alt:"Offer Builder"})}),"\n",(0,a.jsx)("br",{}),"\n",(0,a.jsx)(n.p,{children:"After creating the Offer, Authorized Provider can save it as a local file or post it to a marketplace."}),"\n",(0,a.jsxs)(n.p,{children:["For this example, we will change to the ",(0,a.jsx)(n.strong,{children:"VC Holder"})," wallet and load the Offer file. This wallet contains a VC with the required proof to hold this CR-CAT (",(0,a.jsx)(n.code,{children:"test_proof1"}),"). Enter an optional blockchain fee and click ",(0,a.jsx)(n.code,{children:"ACCEPT OFFER"}),":"]}),"\n",(0,a.jsx)("div",{style:{textAlign:"center"},children:(0,a.jsx)("img",{src:"/img/cr-cat/11_cr-cat.png",alt:"Accept Offer"})}),"\n",(0,a.jsx)("br",{}),"\n",(0,a.jsxs)(n.p,{children:["While the on-chain transaction to accept the Offer is pending, the 99 CR-CATs will be displayed in the VC Holder's ",(0,a.jsx)(n.code,{children:"Pending Balance"}),". Note that the ",(0,a.jsx)(n.code,{children:"Pending Balance for Approval"})," is ",(0,a.jsx)(n.code,{children:"0"})," in this case:"]}),"\n",(0,a.jsx)("div",{style:{textAlign:"center"},children:(0,a.jsx)("img",{src:"/img/cr-cat/12_cr-cat.png",alt:"Pending Offer Acceptance"})}),"\n",(0,a.jsx)("br",{}),"\n",(0,a.jsx)(n.p,{children:"After the transaction has been confirmed, the balance is updated. When receiving CR-CATs via an Offer, there is no need to perform another transaction to approve of the incoming tokens. This is because the proof requirement is already baked into the Offer file."}),"\n",(0,a.jsx)("div",{style:{textAlign:"center"},children:(0,a.jsx)("img",{src:"/img/cr-cat/13_cr-cat.png",alt:"Completed Offer"})}),"\n",(0,a.jsx)("br",{}),"\n",(0,a.jsx)(n.p,{children:"At this point, the VC Holder wallet has full possession of the CR-CATs."}),"\n",(0,a.jsx)(n.h3,{id:"cli-offers",children:"CLI Offers"}),"\n",(0,a.jsxs)(n.p,{children:["Offers for CR-CATs can also be created and accepted via the CLI. For this example, the ",(0,a.jsx)(n.strong,{children:"Authorized Provider"})," will create an Offer using the following flags:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"-o"})," -- The Offer amount, using the syntax ",(0,a.jsx)(n.code,{children:"<Wallet ID of asset to offer>"}),":",(0,a.jsx)(n.code,{children:"<amount to offer>"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"-r"})," -- The requested amount, using the syntax ",(0,a.jsx)(n.code,{children:"<Wallet ID of asset to request>"}),":",(0,a.jsx)(n.code,{children:"<amount to request"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"-p"})," -- The path to the file name in which to save the Offer"]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"chia wallet make_offer -o 5:33 -r 1:0.01 -p ~/Downloads/33_CR-CATs_for_0.01_TXCH.offer\n"})}),"\n",(0,a.jsx)(n.p,{children:"Confirmation is required:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"Creating Offer\n--------------\n\nOFFERING:\n  - 33 CAT 3ba9e16dca39f3fb... (33000 mojos)\nREQUESTING:\n  - 0.01 XCH (10000000000 mojos)\nConfirm (y/n):\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Enter ",(0,a.jsx)(n.code,{children:"y"})," to confirm, and the Offer will be created. For example:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"Created offer with ID 3f525c0ba3ba19a37f8a1708e4eeae8714cd052e78de0217fa728353f1d0f1ad\nUse chia wallet get_offers --id 3f525c0ba3ba19a37f8a1708e4eeae8714cd052e78de0217fa728353f1d0f1ad -f 3152280463 to view status\n"})}),"\n",(0,a.jsxs)(n.p,{children:["In this example, the ",(0,a.jsx)(n.strong,{children:"VC Holder's wallet"})," has 249 CR-CATs prior to taking the Offer:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"CAT 3ba9e16dca39f3fb...:\n   -Total Balance:                      249.0  (249000 mojo)\n   -Balance Pending VC Approval:        0.0  (0 mojo)\n   -Pending Total Balance:              249.0  (249000 mojo)\n   -Spendable:                          249.0  (249000 mojo)\n   -Type:                               CRCAT\n   -Asset ID:                           3ba9e16dca39f3fb3b75e51535487fcd114abeeb0cf30e8975b9567ce5516fb5\n   -Wallet ID:                          3\n"})}),"\n",(0,a.jsxs)(n.p,{children:["The VC Holder can examine the Offer by using the ",(0,a.jsx)(n.code,{children:"take_offer"})," command with the ",(0,a.jsx)(n.code,{children:"-e"})," (examine) flag:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"chia wallet take_offer -e ~/Downloads/33_CR-CATs_for_0.01_TXCH.offer\n"})}),"\n",(0,a.jsx)(n.p,{children:"Response:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"Summary:\n  OFFERED:\n    - CAT 3ba9e16dca39f3fb... (Wallet ID: 3): 33.0 (33000 mojos)\n  REQUESTED:\n    - TXCH (Wallet ID: 1): 0.01 (10000000000 mojos)\n\nIncluded Fees: 0 TXCH, 0 mojos\n"})}),"\n",(0,a.jsxs)(n.p,{children:["The Offer looks good, so the VC Holder takes it by removing the ",(0,a.jsx)(n.code,{children:"-e"})," flag and adding a fee with the ",(0,a.jsx)(n.code,{children:"-m"})," flag:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"chia wallet take_offer ~/Downloads/33_CR-CATs_for_0.01_TXCH.offer -m 0.0001\n"})}),"\n",(0,a.jsx)(n.p,{children:"Response:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"Summary:\n  OFFERED:\n    - CAT 3ba9e16dca39f3fb... (Wallet ID: 3): 33.0 (33000 mojos)\n  REQUESTED:\n    - TXCH (Wallet ID: 1): 0.01 (10000000000 mojos)\n\nIncluded Fees: 0 TXCH, 0 mojos\n\nWould you like to take this offer? (y/n):\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Enter ",(0,a.jsx)(n.code,{children:"y"})," to confirm, and the transaction will be pushed to the blockchain:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"Accepted offer with ID e479f5ab94ad2bfa1c8802186e87d91dfdc9a8c454d894bfa2199a7cf7c1adf0\nUse chia wallet get_offers --id e479f5ab94ad2bfa1c8802186e87d91dfdc9a8c454d894bfa2199a7cf7c1adf0 -f 455644407 to view its status\n"})}),"\n",(0,a.jsxs)(n.p,{children:["After a few minutes, enter the ",(0,a.jsx)(n.code,{children:"get_offers"})," command from the previous command's output. This should show that the Offer has been confirmed:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"chia wallet get_offers --id e479f5ab94ad2bfa1c8802186e87d91dfdc9a8c454d894bfa2199a7cf7c1adf0 -f 455644407\n"})}),"\n",(0,a.jsx)(n.p,{children:"Response:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"Record with id: e479f5ab94ad2bfa1c8802186e87d91dfdc9a8c454d894bfa2199a7cf7c1adf0\n---------------\nCreated at: 2023-09-22 13:20:30\nConfirmed at: Not confirmed\nAccepted at: 2023-09-22 13:20:30\nStatus: CONFIRMED\n---------------\n"})}),"\n",(0,a.jsx)(n.p,{children:"The balance is automatically updated after the offer has been confirmed. Just as with GUI Offers, there is no need to approve the pending balance when using CLI Offers:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"CAT 3ba9e16dca39f3fb...:\n   -Total Balance:                      282.0  (282000 mojo)\n   -Balance Pending VC Approval:        0.0  (0 mojo)\n   -Pending Total Balance:              282.0  (282000 mojo)\n   -Spendable:                          282.0  (282000 mojo)\n   -Type:                               CRCAT\n   -Asset ID:                           3ba9e16dca39f3fb3b75e51535487fcd114abeeb0cf30e8975b9567ce5516fb5\n   -Wallet ID:                          3\n"})}),"\n",(0,a.jsx)(n.p,{children:"At this point, the VC Holder wallet has full possession of the CR-CATs."}),"\n",(0,a.jsx)(n.h2,{id:"when-proofs-are-missing",children:"When Proofs Are Missing"}),"\n",(0,a.jsxs)(n.p,{children:["Wallets that lack the required proofs are not eligible to receive CR-CATs. Recall that an ",(0,a.jsx)(n.a,{href:"#xch-wallet",children:"XCH Wallet"})," was set up for this tutorial. This wallet does not hold any VCs or proofs, so it is not allowed to hold any CR-CATs."]}),"\n",(0,a.jsx)(n.h3,{id:"sending-cr-cats",children:"Sending CR-CATs"}),"\n",(0,a.jsx)(n.p,{children:"Let's say the Authorized Provider obtains the XCH Wallet's address and sends 50 CR-CATs to it:"}),"\n",(0,a.jsx)("div",{style:{textAlign:"center"},children:(0,a.jsx)("img",{src:"/img/cr-cat/14_cr-cat.png",alt:"Send CR-CATs to address lacking proofs"})}),"\n",(0,a.jsx)("br",{}),"\n",(0,a.jsxs)(n.p,{children:["Even though the recipient is not allowed to hold these CR-CATs, the transaction itself is valid. However, just as in the examples at the beginning of this tutorial, the XCH Wallet will receive the CR-CATs in the ",(0,a.jsx)(n.code,{children:"Pending Balance for Approval"})," section of the GUI. In this case, the required proof (in the red circle below) is not present."]}),"\n",(0,a.jsx)(n.p,{children:"The XCH Wallet can still attempt to approve these CR-CATs:"}),"\n",(0,a.jsx)("div",{style:{textAlign:"center"},children:(0,a.jsx)("img",{src:"/img/cr-cat/15_cr-cat.png",alt:"Proof not present"})}),"\n",(0,a.jsx)("br",{}),"\n",(0,a.jsx)("div",{style:{textAlign:"center"},children:(0,a.jsx)("img",{src:"/img/cr-cat/16_cr-cat.png",alt:"Attempt to approve"})}),"\n",(0,a.jsx)("br",{}),"\n",(0,a.jsx)(n.p,{children:"However, this attempt will fail because the required proofs are missing:"}),"\n",(0,a.jsx)("div",{style:{textAlign:"center"},children:(0,a.jsx)("img",{src:"/img/cr-cat/17_cr-cat.png",alt:"Required providers missing"})}),"\n",(0,a.jsx)("br",{}),"\n",(0,a.jsx)(n.p,{children:"The status of these CR-CATs is as follows:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"They are pending approval in the XCH Wallet"}),"\n",(0,a.jsx)(n.li,{children:"The XCH Wallet is not allowed to approve them"}),"\n",(0,a.jsx)(n.li,{children:"The XCH Wallet is not allowed to send them elsewhere"}),"\n",(0,a.jsx)(n.li,{children:"The Authorized Provider's wallet no longer holds them"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Note that even though nothing can be done with the funds in this state, they are still not bricked. The XCH Wallet will gain access to the funds if it obtains a VC with the required proof. However, assuming the XCH Wallet was not supposed to hold the correct VC in the first place, the Authorized Provider will presumably be reluctant to issue a VC to this wallet."}),"\n",(0,a.jsxs)(n.admonition,{type:"info",children:[(0,a.jsx)(n.p,{children:"For the reasons discussed above, exercise caution when sending CR-CATs to another wallet. In fact, because of the risk of making the funds difficult (if not impossible) to access, we recommend that you don't send CR-CATs in this way."}),(0,a.jsx)(n.p,{children:"Instead, you should use Offers to distribute CR-CATs, as they provide two important advantages:"}),(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"If the recipient is allowed to hold the CR-CATs, they will be able to accept an Offer to receive those CATs. Once the Offer is complete, they will not need to submit an approval transaction."}),"\n",(0,a.jsx)(n.li,{children:"If the recipient is not allowed to hold the CR-CATs, they will not be able to accept an Offer to receive those CATs in the first place."}),"\n"]})]}),"\n",(0,a.jsx)(n.h3,{id:"offers-for-cr-cats",children:"Offers for CR-CATs"}),"\n",(0,a.jsx)(n.p,{children:"Let's say the owner of the XCH Wallet locates a CR-CAT Offer. Upon viewing the offer, the wallet's owner will see that the required proof is grayed out, indicating that it is not present:"}),"\n",(0,a.jsx)("div",{style:{textAlign:"center"},children:(0,a.jsx)("img",{src:"/img/cr-cat/18_cr-cat.png",alt:"Offer where required providers missing"})}),"\n",(0,a.jsx)("br",{}),"\n",(0,a.jsx)(n.p,{children:"Any attempts to accept this Offer without first receiving a VC with the required proofs will fail:"}),"\n",(0,a.jsx)("div",{style:{textAlign:"center"},children:(0,a.jsx)("img",{src:"/img/cr-cat/19_cr-cat.png",alt:"Offer acceptance where required providers missing"})}),"\n",(0,a.jsx)("br",{}),"\n",(0,a.jsx)(n.p,{children:"Thus, when using Offers, the funds cannot accidentally be sent to an unauthorized recipient."})]})}function f(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},9329:(e,n,s)=>{s.d(n,{A:()=>l});s(6540);var t=s(4164);const a={tabItem:"tabItem_Ymn6"};var i=s(4848);function l(e){let{children:n,hidden:s,className:l}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,t.A)(a.tabItem,l),hidden:s,children:n})}},5537:(e,n,s)=>{s.d(n,{A:()=>T});var t=s(6540),a=s(4164),i=s(5627),l=s(6347),r=s(372),o=s(604),c=s(1861),d=s(8749);function h(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:s}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:s,attributes:t,default:a}}=e;return{value:n,label:s,attributes:t,default:a}}))}(s);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,s])}function f(e){let{value:n,tabValues:s}=e;return s.some((e=>e.value===n))}function p(e){let{queryString:n=!1,groupId:s}=e;const a=(0,l.W6)(),i=function(e){let{queryString:n=!1,groupId:s}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!s)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return s??null}({queryString:n,groupId:s});return[(0,o.aZ)(i),(0,t.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(a.location.search);n.set(i,e),a.replace({...a.location,search:n.toString()})}),[i,a])]}function x(e){const{defaultValue:n,queryString:s=!1,groupId:a}=e,i=u(e),[l,o]=(0,t.useState)((()=>function(e){let{defaultValue:n,tabValues:s}=e;if(0===s.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!f({value:n,tabValues:s}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${s.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=s.find((e=>e.default))??s[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:i}))),[c,h]=p({queryString:s,groupId:a}),[x,j]=function(e){let{groupId:n}=e;const s=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,i]=(0,d.Dv)(s);return[a,(0,t.useCallback)((e=>{s&&i.set(e)}),[s,i])]}({groupId:a}),m=(()=>{const e=c??x;return f({value:e,tabValues:i})?e:null})();(0,r.A)((()=>{m&&o(m)}),[m]);return{selectedValue:l,selectValue:(0,t.useCallback)((e=>{if(!f({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);o(e),h(e),j(e)}),[h,j,i]),tabValues:i}}var j=s(9136);const m={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=s(4848);function g(e){let{className:n,block:s,selectedValue:t,selectValue:l,tabValues:r}=e;const o=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.a_)(),d=e=>{const n=e.currentTarget,s=o.indexOf(n),a=r[s].value;a!==t&&(c(n),l(a))},h=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const s=o.indexOf(e.currentTarget)+1;n=o[s]??o[0];break}case"ArrowLeft":{const s=o.indexOf(e.currentTarget)-1;n=o[s]??o[o.length-1];break}}n?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":s},n),children:r.map((e=>{let{value:n,label:s,attributes:i}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>{o.push(e)},onKeyDown:h,onClick:d,...i,className:(0,a.A)("tabs__item",m.tabItem,i?.className,{"tabs__item--active":t===n}),children:s??n},n)}))})}function C(e){let{lazy:n,children:s,selectedValue:i}=e;const l=(Array.isArray(s)?s:[s]).filter(Boolean);if(n){const e=l.find((e=>e.props.value===i));return e?(0,t.cloneElement)(e,{className:(0,a.A)("margin-top--md",e.props.className)}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:l.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==i})))})}function w(e){const n=x(e);return(0,b.jsxs)("div",{className:(0,a.A)("tabs-container",m.tabList),children:[(0,b.jsx)(g,{...n,...e}),(0,b.jsx)(C,{...n,...e})]})}function T(e){const n=(0,j.A)();return(0,b.jsx)(w,{...e,children:h(e.children)},String(n))}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>r});var t=s(6540);const a={},i=t.createContext(a);function l(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);