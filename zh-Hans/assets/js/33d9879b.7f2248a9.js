"use strict";(self.webpackChunkchia_docs=self.webpackChunkchia_docs||[]).push([[34],{9228:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>a,toc:()=>u});const a=JSON.parse('{"id":"getting-started/cloud-wallet/unfinished","title":"Unfinished Components","description":"While the Cloud Wallet public beta has most of its planned features in place, it is currently missing a few things that will be included in the production release.","source":"@site/docs/getting-started/cloud-wallet/unfinished.md","sourceDirName":"getting-started/cloud-wallet","slug":"/getting-started/cloud-wallet/unfinished","permalink":"/zh-Hans/getting-started/cloud-wallet/unfinished","draft":false,"unlisted":false,"editUrl":"https://github.com/Chia-Network/chia-docs/blob/main/docs/getting-started/cloud-wallet/unfinished.md","tags":[],"version":"current","frontMatter":{"slug":"/getting-started/cloud-wallet/unfinished","title":"Unfinished Components"},"sidebar":"tutorialSidebar","previous":{"title":"Tooltips","permalink":"/zh-Hans/getting-started/cloud-wallet/tooltips"},"next":{"title":"Known Issues","permalink":"/zh-Hans/getting-started/cloud-wallet/known-issues"}}');var r=n(4848),s=n(8453);n(1470),n(9365);const l={slug:"/getting-started/cloud-wallet/unfinished",title:"Unfinished Components"},i=void 0,o={},u=[{value:"Recovery for Chia Signer Vaults",id:"recovery-for-chia-signer-vaults",level:2},{value:"Recovery for Unlisted Vaults",id:"recovery-for-unlisted-vaults",level:2},{value:"CAT Naming",id:"cat-naming",level:2},{value:"Address Book",id:"address-book",level:2},{value:"Offers",id:"offers",level:2},{value:"Swaps",id:"swaps",level:2},{value:"NFTs",id:"nfts",level:2},{value:"Clawback",id:"clawback",level:2},{value:"Separate Passkeys",id:"separate-passkeys",level:2}];function c(e){const t={h2:"h2",p:"p",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:"While the Cloud Wallet public beta has most of its planned features in place, it is currently missing a few things that will be included in the production release."}),"\n",(0,r.jsx)(t.h2,{id:"recovery-for-chia-signer-vaults",children:"Recovery for Chia Signer Vaults"}),"\n",(0,r.jsx)(t.p,{children:"Vaults that use the Chia Signer app as their signer cannot yet perform a recovery. While the APIs for recovering these vaults are working, the GUI is not yet ready. We are actively working on finishing this."}),"\n",(0,r.jsx)(t.h2,{id:"recovery-for-unlisted-vaults",children:"Recovery for Unlisted Vaults"}),"\n",(0,r.jsx)(t.p,{children:"Currently, if you lose access to your Cloud Wallet and signer passkey (for example, if you are accessing your account from a smartphone, and this phone is stolen), the app does not have a method for recovering your vault. We are working on implementing this."}),"\n",(0,r.jsx)(t.h2,{id:"cat-naming",children:"CAT Naming"}),"\n",(0,r.jsx)(t.p,{children:"Sending and receiving CATs does currently work. However, the Cloud Wallet does not yet map CATs to their TAILs. This results in all CATs being labeled as \u201cUnknown\u201d. This is only a local labeling issue, which does not affect the assets themselves."}),"\n",(0,r.jsx)(t.h2,{id:"address-book",children:"Address Book"}),"\n",(0,r.jsx)(t.p,{children:"We plan to add an address book in order to make it easier to send assets to known addresses."}),"\n",(0,r.jsx)(t.h2,{id:"offers",children:"Offers"}),"\n",(0,r.jsx)(t.p,{children:"We plan to include basic offers, similar to what exists in the reference wallet."}),"\n",(0,r.jsx)(t.h2,{id:"swaps",children:"Swaps"}),"\n",(0,r.jsx)(t.p,{children:"We plan to integrate support for TibetSwap in the Cloud Wallet app."}),"\n",(0,r.jsx)(t.h2,{id:"nfts",children:"NFTs"}),"\n",(0,r.jsx)(t.p,{children:"We plan to support NFTs, similar to what exists in the reference wallet."}),"\n",(0,r.jsx)(t.h2,{id:"clawback",children:"Clawback"}),"\n",(0,r.jsx)(t.p,{children:"We plan to support basic clawback transactions, similar to what exists in the reference wallet."}),"\n",(0,r.jsx)(t.h2,{id:"separate-passkeys",children:"Separate Passkeys"}),"\n",(0,r.jsx)(t.p,{children:"Currently, all Cloud Wallet passkeys are used for both signing into the app and for signing vault transactions. We plan to separate these functionalities to allow separate passkeys to be used."})]})}function d(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},9365:(e,t,n)=>{n.d(t,{A:()=>l});n(6540);var a=n(4164);const r={tabItem:"tabItem_Ymn6"};var s=n(4848);function l(e){let{children:t,hidden:n,className:l}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,a.A)(r.tabItem,l),hidden:n,children:t})}},1470:(e,t,n)=>{n.d(t,{A:()=>k});var a=n(6540),r=n(4164),s=n(3104),l=n(6347),i=n(205),o=n(7485),u=n(1682),c=n(679);function d(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??function(e){return d(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}(n);return function(e){const t=(0,u.XI)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function p(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:n}=e;const r=(0,l.W6)(),s=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,o.aZ)(s),(0,a.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(r.location.search);t.set(s,e),r.replace({...r.location,search:t.toString()})}),[s,r])]}function b(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,s=h(e),[l,o]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:s}))),[u,d]=f({queryString:n,groupId:r}),[b,m]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,s]=(0,c.Dv)(n);return[r,(0,a.useCallback)((e=>{n&&s.set(e)}),[n,s])]}({groupId:r}),v=(()=>{const e=u??b;return p({value:e,tabValues:s})?e:null})();(0,i.A)((()=>{v&&o(v)}),[v]);return{selectedValue:l,selectValue:(0,a.useCallback)((e=>{if(!p({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);o(e),d(e),m(e)}),[d,m,s]),tabValues:s}}var m=n(2303);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=n(4848);function w(e){let{className:t,block:n,selectedValue:a,selectValue:l,tabValues:i}=e;const o=[],{blockElementScrollPositionUntilNextRender:u}=(0,s.a_)(),c=e=>{const t=e.currentTarget,n=o.indexOf(t),r=i[n].value;r!==a&&(u(t),l(r))},d=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=o.indexOf(e.currentTarget)+1;t=o[n]??o[0];break}case"ArrowLeft":{const n=o.indexOf(e.currentTarget)-1;t=o[n]??o[o.length-1];break}}t?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":n},t),children:i.map((e=>{let{value:t,label:n,attributes:s}=e;return(0,g.jsx)("li",{role:"tab",tabIndex:a===t?0:-1,"aria-selected":a===t,ref:e=>o.push(e),onKeyDown:d,onClick:c,...s,className:(0,r.A)("tabs__item",v.tabItem,s?.className,{"tabs__item--active":a===t}),children:n??t},t)}))})}function y(e){let{lazy:t,children:n,selectedValue:s}=e;const l=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===s));return e?(0,a.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:l.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==s})))})}function x(e){const t=b(e);return(0,g.jsxs)("div",{className:(0,r.A)("tabs-container",v.tabList),children:[(0,g.jsx)(w,{...t,...e}),(0,g.jsx)(y,{...t,...e})]})}function k(e){const t=(0,m.A)();return(0,g.jsx)(x,{...e,children:d(e.children)},String(t))}},8453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>i});var a=n(6540);const r={},s=a.createContext(r);function l(e){const t=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),a.createElement(s.Provider,{value:t},e.children)}}}]);