"use strict";(self.webpackChunkchia_docs=self.webpackChunkchia_docs||[]).push([[888],{4496:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>X});const l=JSON.parse('{"id":"reference-client/rpc-reference/rpc","title":"RPC Overview","description":"Note about Windows command escaping","source":"@site/i18n/zh-Hans/docusaurus-plugin-content-docs/current/reference-client/rpc-reference/rpc.md","sourceDirName":"reference-client/rpc-reference","slug":"/reference-client/rpc-reference/rpc","permalink":"/zh-Hans/reference-client/rpc-reference/rpc","draft":false,"unlisted":false,"editUrl":"https://github.com/Chia-Network/chia-docs/blob/main/docs/reference-client/rpc-reference/rpc.md","tags":[],"version":"current","frontMatter":{"sidebar_label":"Overview","title":"RPC Overview","slug":"/reference-client/rpc-reference/rpc"},"sidebar":"tutorialSidebar","previous":{"title":"Coin Selection","permalink":"/zh-Hans/reference-client/coin-selection"},"next":{"title":"DAOs","permalink":"/zh-Hans/reference-client/rpc-reference/dao-rpc"}}');var s=n(4848),i=n(8453);const r={sidebar_label:"Overview",title:"RPC Overview",slug:"/reference-client/rpc-reference/rpc"},c=void 0,a={},X=[{value:"Default Ports:",id:"default-ports",level:3},{value:"HTTP/JSON",id:"httpjson",level:3},{value:"Curl",id:"curl",level:4},{value:"WebSockets",id:"websockets",level:3},{value:"WebSockets Example (courtesy of baerrs)",id:"websockets-example-courtesy-of-baerrs",level:4},{value:"WebSockets Example Output",id:"websockets-example-output",level:4},{value:"Python",id:"python",level:3},{value:"Python Example (courtesy of baerrs)",id:"python-example-courtesy-of-baerrs",level:4},{value:"Javascript",id:"javascript",level:3},{value:"C# Example (courtesy of Kryptomine)",id:"c-example-courtesy-of-kryptomine",level:4},{value:"Services",id:"services",level:2},{value:"Log Levels",id:"log-levels",level:2},{value:"<code>get_log_level</code>",id:"get_log_level",level:3},{value:"<code>set_log_level</code>",id:"set_log_level",level:3},{value:"<code>reset_log_level</code>",id:"reset_log_level",level:3}];function o(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components},{Details:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n,{children:[(0,s.jsx)("summary",{children:"Note about Windows command escaping"}),(0,s.jsx)(t.p,{children:"This document will use Linux/MacOS RPC syntax. When running rpc commands on Windows, you'll need to escape all quotes with backslashes."}),(0,s.jsx)(t.p,{children:"For example, here is a typical RPC command on Linux and MacOS:"}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-powershell",children:'chia rpc wallet create_new_wallet \'{"wallet_type": "nft_wallet"}\'\n'})}),(0,s.jsx)(t.p,{children:"To run the same command on Windows, you need to escape the quotes, so it looks like this (the braces have been removed to support the formatting for this page. You still need to use them in your actual commands.):"}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-powershell",children:'chia rpc wallet create_new_wallet \'{\\"wallet_type\\": \\"nft_wallet\\"}\'\n'})})]}),"\n",(0,s.jsxs)(t.p,{children:["The Chia node and services come with a JSON RPC API server that allows you to access information and control the services.\nThese are accessible via HTTP, WebSockets, or via client SDKs.\nThe ports can be configured in ",(0,s.jsx)(t.code,{children:"~/.chia/mainnet/config/config.yaml"}),".\nThe RPC ports should not be exposed to the internet.\nTLS certificates are used to secure the communication."]}),"\n",(0,s.jsx)(t.admonition,{title:"Testing RPC Functionality",type:"tip",children:(0,s.jsxs)(t.p,{children:["Need to validate that your RPC endpoints are working correctly? Use the ",(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.a,{href:"/guides/rpc-validation-tool",children:"RPC Validation Tool"})})," to test and validate all available RPC functionality."]})}),"\n",(0,s.jsx)(t.h3,{id:"default-ports",children:"Default Ports:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Daemon: 55400"}),"\n",(0,s.jsx)(t.li,{children:"Full Node: 8555"}),"\n",(0,s.jsx)(t.li,{children:"Farmer: 8559"}),"\n",(0,s.jsx)(t.li,{children:"Harvester: 8560"}),"\n",(0,s.jsx)(t.li,{children:"Wallet: 9256"}),"\n",(0,s.jsx)(t.li,{children:"DataLayer: 8562"}),"\n",(0,s.jsx)(t.li,{children:"Crawler: 8561"}),"\n",(0,s.jsx)(t.li,{children:"Timelord: 8557"}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"httpjson",children:"HTTP/JSON"}),"\n",(0,s.jsx)(t.p,{children:"The certificates must be used when calling the RPCs from the command line, make sure to use the correct certificates for the services you are calling.\nAll endpoints are made with POST with JSON data. The response is a JSON dictionary with a success field, which can be true or false."}),"\n",(0,s.jsx)(t.h4,{id:"curl",children:"Curl"}),"\n",(0,s.jsxs)(t.p,{children:["When using curl commands ensure that the ",(0,s.jsx)(t.code,{children:"--insecure"})," (or ",(0,s.jsx)(t.code,{children:"-k"}),") flag is used since the chia client relies on self-signed certificates defined with the ",(0,s.jsx)(t.code,{children:"--cert"})," and ",(0,s.jsx)(t.code,{children:"--key"})," flags:\nAn example implementation can be found in the chia docker implementation ",(0,s.jsx)(t.a,{href:"https://github.com/Chia-Network/chia-docker/blob/d00a988368adb2cc26b9ac24e79e0f109e54b5af/docker-healthcheck.sh#L116",children:"here"}),"."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:'curl --insecure --cert $config_root/config/ssl/full_node/private_full_node.crt \\\n     --key $config_root/config/ssl/full_node/private_full_node.key \\\n     -d \'{ "header_hash": "\'$hash\'" }\' -H "Content-Type: application/json" \\\n     -X POST https://localhost:$port/get_block\n'})}),"\n",(0,s.jsx)(t.h3,{id:"websockets",children:"WebSockets"}),"\n",(0,s.jsxs)(t.p,{children:["If you are using the Websockets API, you can go directly through the daemon, which routes requests. Each WebSocket message contains the following fields:\nSome examples can be found ",(0,s.jsx)(t.a,{href:"https://github.com/Chia-Mine/chia-agent",children:"here"}),"."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:'{\n  "command": "get_blockchain_state",\n  "ack": false,\n  "data": {},\n  "request_id": "123456",\n  "destination": "wallet",\n  "origin": "ui"\n}\n'})}),"\n",(0,s.jsxs)(t.h4,{id:"websockets-example-courtesy-of-baerrs",children:["WebSockets Example (courtesy of ",(0,s.jsx)(t.a,{href:"https://github.com/baerrs",children:"baerrs"}),")"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:'import json\nfrom datetime import datetime\nimport websocket\nimport ssl\n\n\n# websocket.enableTrace(True)\ndef on_message(ws, message):\n    print(\'{0}: Got message: {1}\'.format(datetime.now(), message))\n\n\ndef on_error(self, error):\n    print(\'Error in websocket: {0}\'.format(error))\n\n\ndef on_close(self, ws, e):\n    print("{0]: Websocket closed: {1}".format(datetime.now(), e))\n\n\ndef on_open(self):\n    print(\'{0}: Connected to Websocket\'.format(datetime.now()))\n    message = {"destination": "daemon", "command": "register_service", "request_id": "123456ca", "origin": "", "data": { "service": \'chia_agent\'}}\n    on_send_message(self, message)\n    message = {"destination": "daemon", "command": "register_service", "request_id": "123456w", "origin": "", "data": { "service": \'wallet_ui\'}}\n    on_send_message(self, message)\n\ndef on_send_message(ws, message):\n    print(\'{0}: Sent Message: {1}\'.format(datetime.now(), message))\n    wsapp.send(json.dumps(message))\n\n\ndef on_ping(ws, data):\n    print(\'{0}: Got ping: {1}\'.format(datetime.now(), data))\n\n\nprint("Starting Something")\nwsapp = websocket.WebSocketApp("wss://localhost:55400",\n                               on_open=on_open,\n                               on_message=on_message,\n                               on_error=on_error,\n                               on_ping=on_ping)\n\nwsapp.run_forever(sslopt={"cert_reqs": ssl.CERT_NONE, "certfile": "ssl/daemon/private_daemon.crt",\n                          "keyfile": "ssl/daemon/private_daemon.key", "ssl_context.check_hostname": False})\nwsapp.close()\n'})}),"\n",(0,s.jsx)(t.h4,{id:"websockets-example-output",children:"WebSockets Example Output"}),"\n",(0,s.jsxs)(t.p,{children:["(Long strings have been replaced with ",(0,s.jsx)(t.code,{children:"XxXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"}),".)"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:'Starting Something\n2022-01-24 21:20:39.782297: Connected to Websocket\n2022-01-24 21:20:39.782297: Sent Message: {\'destination\': \'daemon\', \'command\': \'register_service\', \'request_id\': \'123456ca\', \'origin\': \'\', \'data\': {\'service\': \'chia_agent\'}}\n2022-01-24 21:20:39.782297: Sent Message: {\'destination\': \'daemon\', \'command\': \'register_service\', \'request_id\': \'123456w\', \'origin\': \'\', \'data\': {\'service\': \'wallet_ui\'}}\n2022-01-24 21:20:39.782297: Got message: {"ack": true, "command": "register_service", "data": {"success": true}, "destination": "", "origin": "daemon", "request_id": "123456ca"}\n2022-01-24 21:20:39.782297: Got message: {"ack": true, "command": "register_service", "data": {"success": true}, "destination": "", "origin": "daemon", "request_id": "123456w"}\n2022-01-24 21:20:45.053029: Got message: {"ack": false, "command": "get_connections", "data": {"connections": [{"bytes_read": 3094726, "bytes_written": 1545670, "creation_time": 1642488338.7817655, "last_message_time": 1643077239.4690468, "local_port": 8447, "node_id": "XxXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "peer_host": "127.0.0.1", "peer_port": 3445, "peer_server_port": 8448, "type": 2}, {"bytes_read": 870298, "bytes_written": 51, "creation_time": 1642743064.406306, "last_message_time": 1643077239.4690468, "local_port": 8447, "node_id": "XxXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "peer_host": "127.0.0.1", "peer_port": 8444, "peer_server_port": 8444, "type": 1}], "success": true}, "destination": "wallet_ui", "origin": "chia_farmer", "request_id": "XxXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"}\n2022-01-24 21:20:48.417804: Got message: {"ack": false, "command": "new_signage_point", "data": {"proofs": [], "signage_point": {"challenge_chain_sp": "XxXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "challenge_hash": "XxXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "difficulty": 2672, "reward_chain_sp": "XxXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "signage_point_index": 8, "sub_slot_iters": 135266304}, "success": true}, "destination": "wallet_ui", "origin": "chia_farmer", "request_id": "XxXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"}\n2022-01-24 21:20:48.417804: Got message: {"ack": false, "command": "new_farming_info", "data": {"farming_info": {"challenge_hash": "XxXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "passed_filter": 0, "proofs": 0, "signage_point": "0x35e9aaf13ebca31660f9720f97cf2c127a01a24440a6a253b5953196da715162", "timestamp": 1643077248, "total_plots": 3}, "success": true}, "destination": "wallet_ui", "origin": "chia_farmer", "request_id": "XxXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"}\n2022-01-24 21:20:57.402740: Got message: {"ack": false, "command": "new_signage_point", "data": {"proofs": [], "signage_point": {"challenge_chain_sp": "XxXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "challenge_hash": "XxXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "difficulty": 2672, "reward_chain_sp": "XxXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "signage_point_index": 9, "sub_slot_iters": 135266304}, "success": true}, "destination": "wallet_ui", "origin": "chia_farmer", "request_id": "XxXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"}\n2022-01-24 21:20:57.402740: Got message: {"ack": false, "command": "new_farming_info", "data": {"farming_info": {"challenge_hash": "XxXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "passed_filter": 0, "proofs": 0, "signage_point": "XxXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "timestamp": 1643077257, "total_plots": 3}, "success": true}, "destination": "wallet_ui", "origin": "chia_farmer", "request_id": "XxXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"}\n'})}),"\n",(0,s.jsx)(t.h3,{id:"python",children:"Python"}),"\n",(0,s.jsxs)(t.p,{children:["Most of the rpc methods are accessible through the different client objects in ",(0,s.jsx)(t.code,{children:"chia-blockchain/chia/rpc"}),".\nFor examples of usage, see the command line implementation (chia wallet, chia show, etc)."]}),"\n",(0,s.jsxs)(t.h4,{id:"python-example-courtesy-of-baerrs",children:["Python Example (courtesy of ",(0,s.jsx)(t.a,{href:"https://github.com/baerrs",children:"baerrs"}),")"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:"import requests\nimport urllib3\nimport json\nurllib3.disable_warnings()\n\nheaders = {'Content-Type': 'application/json'}\nurl = \"https://localhost:8555/get_blockchain_state\"\ndata = '{}'\ncert = ('ssl/full_node/private_full_node.crt', 'ssl/full_node/private_full_node.key')\nresponse = json.loads(requests.post(url, data=data, headers=headers, cert=cert, verify=False).text)\nprint(json.dumps(response, indent=4, sort_keys=True))\n"})}),"\n",(0,s.jsx)(t.h3,{id:"javascript",children:"Javascript"}),"\n",(0,s.jsxs)(t.p,{children:["A javascript client can be found here: ",(0,s.jsx)(t.a,{href:"https://github.com/Chia-Mine/chia-agent",children:"https://github.com/Chia-Mine/chia-agent"}),".\nThere is also another client here: ",(0,s.jsx)(t.a,{href:"https://github.com/freddiecoleman/chia-client",children:"https://github.com/freddiecoleman/chia-client"}),"."]}),"\n",(0,s.jsxs)(t.h4,{id:"c-example-courtesy-of-kryptomine",children:["C# Example (courtesy of ",(0,s.jsx)(t.a,{href:"https://www.nuget.org/profiles/Kryptomine.ch",children:"Kryptomine"}),")"]}),"\n",(0,s.jsxs)(t.p,{children:["A C# Client can be found on ",(0,s.jsx)(t.a,{href:"https://www.nuget.org/packages/Chia-Client-API",children:"Nuget/Github"}),"."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-C#",children:"using System;\nusing Chia_Client_API.WalletAPI_NS;\nusing CHIA_RPC.General_NS;\nusing CHIA_RPC.Wallet_NS.Wallet_NS;\n\nnamespace ChiaExamples\n{\n    internal class Program\n    {\n        private static Wallet_RPC_Client Wallet = new Wallet_RPC_Client(reportResponseErrors: false);\n\n        public static void Main()\n        {\n            WalletID_RPC walletID_RPC = new WalletID_RPC(1);\n            GetWalletBalance_Response response = Wallet.GetWalletBalance_Sync(walletID_RPC);\n            Console.WriteLine(response.wallet_balance.confirmed_wallet_balance_in_xch);\n            Console.ReadKey();\n        }\n    }\n}\n"})}),"\n",(0,s.jsx)(t.h2,{id:"services",children:"Services"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Service"}),(0,s.jsx)(t.th,{children:"Managed Objects"}),(0,s.jsx)(t.th,{children:"Associated API"}),(0,s.jsx)(t.th,{children:"Associated RPC API"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"FarmerService"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://github.com/Chia-Network/chia-blockchain/blob/main/chia/farmer/farmer.py",children:"Farmer"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://github.com/Chia-Network/chia-blockchain/blob/main/chia/farmer/farmer_api.py",children:"FarmerAPI"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://github.com/Chia-Network/chia-blockchain/blob/main/chia/rpc/farmer_rpc_api.py",children:"FarmerRpcApi"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"FullNodeService"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://github.com/Chia-Network/chia-blockchain/blob/main/chia/full_node/full_node.py",children:"FullNode"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://github.com/Chia-Network/chia-blockchain/blob/main/chia/full_node/full_node_api.py",children:"FullNodeAPI"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://github.com/Chia-Network/chia-blockchain/blob/main/chia/rpc/full_node_rpc_api.py",children:"FullNodeRpcApi"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"HarvesterService"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://github.com/Chia-Network/chia-blockchain/blob/main/chia/harvester/harvester.py",children:"Harvester"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://github.com/Chia-Network/chia-blockchain/blob/main/chia/harvester/harvester_api.py",children:"HarvesterAPI"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://github.com/Chia-Network/chia-blockchain/blob/main/chia/rpc/harvester_rpc_api.py",children:"HarvesterRpcApi"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"IntroducerService"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://github.com/Chia-Network/chia-blockchain/blob/main/chia/introducer/introducer.py",children:"Introducer"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://github.com/Chia-Network/chia-blockchain/blob/main/chia/introducer/introducer_api.py",children:"IntroducerAPI"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://github.com/Chia-Network/chia-blockchain/blob/main/chia/rpc/full_node_rpc_api.py",children:"FullNodeRpcApi"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"CrawlerService"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://github.com/Chia-Network/chia-blockchain/blob/main/chia/seeder/crawler.py",children:"Crawler"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://github.com/Chia-Network/chia-blockchain/blob/main/chia/seeder/crawler_api.py",children:"CrawlerAPI"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://github.com/Chia-Network/chia-blockchain/blob/main/chia/rpc/crawler_rpc_api.py",children:"CrawlerRpcApi"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"DataLayerService"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://github.com/Chia-Network/chia-blockchain/blob/main/chia/data_layer/data_layer.py",children:"DataLayer"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://github.com/Chia-Network/chia-blockchain/blob/main/chia/data_layer/data_layer_api.py",children:"DataLayerAPI"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://github.com/Chia-Network/chia-blockchain/blob/main/chia/rpc/data_layer_rpc_api.py",children:"DataLayerRpcApi"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"TimelordService"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://github.com/Chia-Network/chia-blockchain/blob/main/chia/timelord/timelord.py",children:"Timelord"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://github.com/Chia-Network/chia-blockchain/blob/main/chia/timelord/timelord_api.py",children:"TimelordAPI"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://github.com/Chia-Network/chia-blockchain/blob/main/chia/rpc/timelord_rpc_api.py",children:"TimelordRpcApi"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"WalletService"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://github.com/Chia-Network/chia-blockchain/blob/main/chia/wallet/wallet_node.py",children:"WalletNode"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://github.com/Chia-Network/chia-blockchain/blob/main/chia/wallet/wallet_node_api.py",children:"WalletNodeAPI"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://github.com/Chia-Network/chia-blockchain/blob/main/chia/rpc/wallet_rpc_api.py",children:"WalletRpcApi"})})]})]})]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Explanation:"}),"\nEach service is composed of a managed object, an API for control, and an RPC API for remote control. The combination of these into the service is controlled by the ",(0,s.jsx)(t.a,{href:"https://github.com/Chia-Network/chia-blockchain/blob/main/chia/types/aliases.py",children:"service alias"})," types."]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Service"}),": This column lists the different manager services within the Chia system."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Managed Objects"}),": This column details the core entities or components that each service oversees."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Associated API"}),": This column specifies the API class associated with each service. This API class defines the interface for interacting with the corresponding managed objects."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Associated RPC API"}),": This column lists the RPC API class associated with each service. This RPC API class allows for remote control of the managed objects through Remote Procedure Calls (RPC)."]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"log-levels",children:"Log Levels"}),"\n",(0,s.jsx)(t.p,{children:"Added in version 2.5.1, the below RPCs are for interacting with log levels for the various services while they are running running."}),"\n",(0,s.jsx)(t.h3,{id:"get_log_level",children:(0,s.jsx)(t.code,{children:"get_log_level"})}),"\n",(0,s.jsx)(t.p,{children:"Functionality: Get the services current log level"}),"\n",(0,s.jsx)(t.p,{children:"Usage: chia rpc [SERVICE] get_log_level"}),"\n",(0,s.jsx)(t.p,{children:"Options:"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Short Command"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Long Command"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Required"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"-j"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"--json-file"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"TEXT"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"False"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Instead of REQUEST, provide a json file containing the request data"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"-h"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"--help"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"None"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"False"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Show a help message and exit"})]})]})]}),"\n",(0,s.jsx)(t.p,{children:"Request Services:"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Required"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"STRING"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"True"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:'The service to query for its log level; valid examples include: "crawler", "data_layer", "farmer", "full_node", "harvester", "timelord", "wallet"'})]})})]}),"\n",(0,s.jsx)(t.p,{children:"Request Parameters: None"}),"\n",(0,s.jsxs)(n,{children:[(0,s.jsx)("summary",{children:"Example"}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:"chia rpc wallet get_log_level\n"})}),(0,s.jsx)(t.p,{children:"Response:"}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:'{\n  "available_levels": [\n    "CRITICAL",\n    "FATAL",\n    "ERROR",\n    "WARN",\n    "WARNING",\n    "INFO",\n    "DEBUG",\n    "NOTSET"\n  ],\n  "level": "WARNING",\n  "success": true\n}\n'})})]}),"\n",(0,s.jsx)(t.h3,{id:"set_log_level",children:(0,s.jsx)(t.code,{children:"set_log_level"})}),"\n",(0,s.jsx)(t.p,{children:"Functionality: Set the services current log level"}),"\n",(0,s.jsx)(t.p,{children:"Usage: chia rpc [SERVICE] set_log_level"}),"\n",(0,s.jsx)(t.p,{children:"Options:"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Short Command"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Long Command"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Required"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"-j"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"--json-file"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"TEXT"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"False"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Instead of REQUEST, provide a json file containing the request data"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"-h"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"--help"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"None"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"False"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Show a help message and exit"})]})]})]}),"\n",(0,s.jsx)(t.p,{children:"Request Services:"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Required"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"STRING"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"True"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:'Set the log level for this service; valid examples include: "crawler", "data_layer", "farmer", "full_node", "harvester", "timelord", "wallet"'})]})})]}),"\n",(0,s.jsx)(t.p,{children:"Request Parameters:"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Flag"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Required"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"level"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"STRING"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"True"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:'The log level to set for the designated service; valid levels are: "CRITICAL", "FATAL", "ERROR", "WARN", "WARNING", "INFO", "DEBUG", "NOTSET"'})]})})]}),"\n",(0,s.jsxs)(n,{children:[(0,s.jsx)("summary",{children:"Example"}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:'chia rpc wallet set_log_level \'\n{\n    "level": "DEBUG"\n}\'\n\n'})}),(0,s.jsx)(t.p,{children:"Response:"}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:'{\n  "available_levels": [\n    "CRITICAL",\n    "FATAL",\n    "ERROR",\n    "WARN",\n    "WARNING",\n    "INFO",\n    "DEBUG",\n    "NOTSET"\n  ],\n  "errors": [],\n  "level": "DEBUG",\n  "success": true\n}\n'})})]}),"\n",(0,s.jsx)(t.h3,{id:"reset_log_level",children:(0,s.jsx)(t.code,{children:"reset_log_level"})}),"\n",(0,s.jsx)(t.p,{children:"Functionality: Reset the services current log level"}),"\n",(0,s.jsx)(t.p,{children:"Usage: chia rpc [SERVICE] reset_log_level"}),"\n",(0,s.jsx)(t.p,{children:"Options:"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Short Command"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Long Command"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Required"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"-j"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"--json-file"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"TEXT"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"False"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Instead of REQUEST, provide a json file containing the request data"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"-h"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"--help"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"None"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"False"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Show a help message and exit"})]})]})]}),"\n",(0,s.jsx)(t.p,{children:"Request Services:"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Required"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"STRING"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"True"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:'Reset the log level for this service; valid examples include: "crawler", "data_layer", "farmer", "full_node", "harvester", "timelord", "wallet"'})]})})]}),"\n",(0,s.jsx)(t.p,{children:"Request Parameters: None"}),"\n",(0,s.jsxs)(n,{children:[(0,s.jsx)("summary",{children:"Example"}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:"chia rpc wallet reset_log_level\n"})}),(0,s.jsx)(t.p,{children:"Response:"}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:'{\n  "available_levels": [\n    "CRITICAL",\n    "FATAL",\n    "ERROR",\n    "WARN",\n    "WARNING",\n    "INFO",\n    "DEBUG",\n    "NOTSET"\n  ],\n  "errors": [],\n  "level": "WARNING",\n  "success": true\n}\n'})})]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>c});var l=n(6540);const s={},i=l.createContext(s);function r(e){const t=l.useContext(i);return l.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),l.createElement(i.Provider,{value:t},e.children)}}}]);